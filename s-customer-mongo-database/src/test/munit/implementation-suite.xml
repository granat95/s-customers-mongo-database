<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="deleteCustomers-test" doc:id="825be420-b3bb-4e1c-85da-6afc7431dc4c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Remove documents" doc:id="cac8a23d-a958-4586-8f00-59173d92d4df" processor="mongo:remove-documents">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="475e6f93-4fc4-42f5-8698-5efccca9f30f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://deleteCustomerstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://deleteCustomerstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4a2b9bc7-dbce-4b58-a06f-51b4126054ee" >
				<munit:payload value="#[readUrl('classpath://deleteCustomerstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://deleteCustomerstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deleteCustomerstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to deleteCustomers" doc:id="cd9466df-618c-4a18-af9a-8a48378840a6" name="deleteCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d2bd0b05-05fd-47fb-92e3-4646c2e49579" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deleteCustomerstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="a7aac87c-5d02-46da-b6e7-1d198bd8b0ea" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="639e517b-85c9-4d29-b192-decf9fe649aa" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="25fbf4b4-7d72-4974-89bb-7ae1178c21b4" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e9e7614f-2472-443a-8f9a-d1be09004835" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="f15b9277-ffd1-4d0b-9e44-1f23bd0cef5e" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="659b15dd-4501-4e46-badb-9a6801f48ba8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postCustomers-test" doc:id="fbfc98b3-d486-427a-8cd0-d240c927f754" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert document" doc:id="4b3557ef-fedf-428f-8ebd-c2ab0fb53140" processor="mongo:insert-document">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1258fe03-85c4-4a4c-95fd-846797417901" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postCustomerstest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCustomerstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6a953298-b9ca-4bf7-939f-73a4c00c871b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postCustomerstest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postCustomerstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postCustomerstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postCustomers" doc:id="6ebdd686-99f8-4768-a68d-e38cc4a46c22" name="postCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="787837e9-e04b-46e2-bf69-1c3fdda1b6f0" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postCustomerstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="e00e47d8-da46-482c-a715-ba3098e780c5" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="09290d77-c143-4a60-9bca-6e951e4c6fdb" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="eb9f8ac8-18ec-474b-aca0-27f6c9c04a92" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c06218f5-de88-47de-bebd-c3a023721f8e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="59451ea9-2a82-460c-a2f7-ae3ed08345d5" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="64f1649e-ba4d-49de-a86d-bbce7152b175" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getCustomers-test-all" doc:id="3b204275-e1c8-4593-ba18-8e7076aff180" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock all customers" doc:id="44757f61-ff74-4f66-a469-fce5090f3a96" processor="mongo:find-documents">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b26b5d00-187e-4da6-bb55-08b840dc3d62" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getCustomerstest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4fc4e24a-030c-46c1-b7de-a036319b7342" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getCustomerstest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getCustomerstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomers" doc:id="527dbb81-ae3f-43cd-9bcc-87b327290b4e" name="getCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5015cba8-bff9-4a8d-8bff-fde6566e924d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getCustomerstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify data to json" doc:id="89082848-e0f4-427a-b901-74e196010837" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c8129763-899e-4386-8642-74ed49757a89" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="fca1cd19-d437-4b80-bc2f-c5d4dd88f70d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3b0b8d94-f28d-4225-8829-6597aa9c987f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="ad718996-c157-44ff-9553-86b053d2707e" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eadb0ef1-ac25-4700-817f-d0ced3e8aba3" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getCustomers-test-query-company" doc:id="01472e5e-e54b-4a3f-9bf2-abf2b99a5217" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock query company" doc:id="4636e55e-517c-4a29-99ef-2a8fbc0be624" processor="mongo:find-documents">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="df38add9-acd0-41a5-9176-916c79e7465e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getCustomerstest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstest1\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="509e4d02-7994-412b-b72c-69aac0492a92" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getCustomerstest1\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getCustomerstest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomers" doc:id="13ef41c0-0997-4498-8fd3-b796faccdd6d" name="getCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2b599f5f-5604-4661-a1f0-064cfb9c5670" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getCustomerstest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify data to json" doc:id="f9d0b57d-e63a-466a-a1eb-c94bfd583e66" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c8129763-899e-4386-8642-74ed49757a89" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="1a413298-9d32-4cef-a76e-6fc3cea14ebb" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3b0b8d94-f28d-4225-8829-6597aa9c987f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="0dffa573-88fb-4516-b9c9-312a8666f57c" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eadb0ef1-ac25-4700-817f-d0ced3e8aba3" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getCustomers-test-query-name" doc:id="931be9b8-11d7-44fa-b178-638ab3eda3ff" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock query name" doc:id="bab29c0b-b21c-476a-9ca0-8036d951a1a3" processor="mongo:find-documents">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6691e5ca-92ed-426a-9d83-6060e24caf7e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getCustomerstestqueryname\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstestqueryname\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="0598aa38-d62d-49e4-a4f3-587a862cf583" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getCustomerstestqueryname\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getCustomerstestqueryname\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerstestqueryname\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomers" doc:id="f552b533-ac03-490b-a242-a8be0ea1ce06" name="getCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ed9c36bc-6659-457c-9bb6-fb3c5f6c8311" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getCustomerstestqueryname::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify data to json" doc:id="9ce76805-f95c-4aba-b9b1-3417127f3e79" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c8129763-899e-4386-8642-74ed49757a89" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="abc5b7dc-2866-43c5-8969-b75dfea27544" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3b0b8d94-f28d-4225-8829-6597aa9c987f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="9d34f166-883d-47f4-bc70-33ef7320f4a5" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eadb0ef1-ac25-4700-817f-d0ced3e8aba3" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
